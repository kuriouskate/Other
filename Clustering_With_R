#Clustering With R
set seed(9361)

#K-means clustering
iris2<-iris
iris2$Species<-NULL #eliminates variable Species from dataframe
iris.kmeans<-kmeans(iris2, 3) #clustered by k-means method
#k-means method partitions data into k groups such that sum of squares from points
#to assigned cluster center is minimized
table(iris$Species, iris.kmeans$cluster) #check results
plot(iris2[c("Sepal.Length","Sepal.Width")], col=iris.kmeans$cluster)
#scatterplot of sepal.length vs sepal.width colored by cluster type
points(iris.kmeans$centers[,c("Sepal.Length","Sepal.Width")], col=1:3, pch="*", cex=5)
#add points for cluster centers

#density based clustering
library(fpc)
iris2<-iris[-5] #delete fifth column
ds<-dbscan(iris2, eps=0.42, MinPts=5) #DBSCAN clustering: cluster iris2 with reachability distance=0.42 and dreachable # of pts=5
table(ds$cluster, iris$Species) #compare cluster with true data classes
plotcluster(iris2, ds$cluster)

kmean.test<-function (iris, B=10) {
  iris2<-iris
  iris2$Species<- NULL #eliminates variable Species from dataframe
  R=0
  boot<-matrix(nrow=150, ncol=B)
  
  for (b in 1:B) {
  iris.kmeans<-kmeans(iris2,3)
  boot[,b]<-iris.kmeans$cluster
  }
  return(boot)
}

boot<-kmean.test(iris,10)
dat<-apply(boot,2,mfv,method='discrete')
n<-length(dat)
clusters<-c()
for (i in 1:n) {
clusters[i]<-dat[[i]][1]
}
return(clusters)
boot<-kmean.test(iris,50)
table(iris$Species, boot)

